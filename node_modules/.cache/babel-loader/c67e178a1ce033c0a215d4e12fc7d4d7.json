{"ast":null,"code":"var _jsxFileName = \"/home/ecemgul/send_stonetiy/src/App.js\",\n    _s = $RefreshSig$();\n\nimport { useState } from \"react\";\nimport \"./App.css\";\nimport useStoneitySortHook from \"./hooks/useStoneitySortHook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  const [array, setArray] = useState([\"\"]);\n  const [addValue, setAddValue] = useState();\n  const [sorted, setSorted, addVal] = useStoneitySortHook(array);\n\n  const createInputArray = function (input) {\n    let separator = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : \",\";\n    const resultArr = Array(input.split(separator).length);\n\n    for (var i = 0; i < input.split(separator).length; i++) {\n      resultArr[i] = Number(input.split(separator)[i]);\n    }\n\n    setArray(resultArr);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"form\", {\n    className: \"App\",\n    autoComplete: \"off\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"form-field\",\n      children: [/*#__PURE__*/_jsxDEV(\"label\", {\n        children: \"Array Input Field\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"page\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"first-division\",\n          children: [/*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => createInputArray(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 15\n          }, this), \"*Please enter the array in the input field with comma between the numbers. Do not put spaces at the beginning or end of the array.\", /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"sort\",\n            children: array && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => setSorted(array),\n              className: \"sort-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Sort\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 14\n          }, this), /*#__PURE__*/_jsxDEV(\"input\", {\n            type: \"text\",\n            onChange: e => setAddValue(e.target.value),\n            required: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 5\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"add\",\n            children: array && /*#__PURE__*/_jsxDEV(\"button\", {\n              type: \"button\",\n              onClick: () => addVal(addValue),\n              className: \"add-btn\",\n              children: /*#__PURE__*/_jsxDEV(\"span\", {\n                children: \"Add\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 8\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 56,\n              columnNumber: 5\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 7\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: \"output\",\n            children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n              children: \"Output\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 11\n            }, this), sorted.map(sorted => /*#__PURE__*/_jsxDEV(\"span\", {\n              children: [sorted, sorted ? \", \" : \"\"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 8\n            }, this))]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 10\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"sBdyhIjGag/ymFVMtKorxZrsxkQ=\", false, function () {\n  return [useStoneitySortHook];\n});\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["useState","useStoneitySortHook","App","array","setArray","addValue","setAddValue","sorted","setSorted","addVal","createInputArray","input","separator","resultArr","Array","split","length","i","Number","e","target","value","map"],"sources":["/home/ecemgul/send_stonetiy/src/App.js"],"sourcesContent":["import { useState } from \"react\";\nimport \"./App.css\";\nimport  useStoneitySortHook  from \"./hooks/useStoneitySortHook\";\n\n\nfunction App() {\n  const [array,setArray] = useState([\"\"]);\n  const [addValue,setAddValue] = useState();\n  const [sorted,setSorted,addVal] = useStoneitySortHook(array);\n \n\n  const createInputArray = (input , separator = \",\") => {\n\tconst resultArr = Array(input.split(separator).length);\n\tfor(var i = 0;i < input.split(separator).length ; i++){\n\t\tresultArr[i] = Number(input.split(separator)[i]);\n\t\t\n\t}\n\tsetArray(resultArr);\n    \n  }\n  \n \n  return (\n    <form className=\"App\" autoComplete=\"off\">\n      <div className=\"form-field\">\n        <label >Array Input Field</label>\n        {\n          <div  className=\"page\">\n            <div className=\"first-division\">\n              <input\n\t\t\t  type = \"text\"\n         \t  onChange={(e) => createInputArray(e.target.value)}\n              required\n              />\n\t\t\t  *Please enter the array in the input field with comma between the numbers. Do not put spaces at the beginning or end of the array.\n            \t<div className=\"sort\">\n\t\t\t\t{array &&\n          \t\t(\n\t\t\t\t<button\n\t\t\t    type=\"button\"\n\t\t\t    onClick={() => setSorted(array)}\n\t\t\t    className=\"sort-btn\"\n\t\t\t\t>\n\t\t\t    <span>Sort</span>\n\t\t\t\t</button>\n\t\t  \t\t)}\n     \t\t\t </div>\n\t\t\t\t<input\n\t\t\t  \ttype = \"text\"\n         \t  \tonChange={(e) => setAddValue(e.target.value)}\n              \trequired\n                />\n\t \t\t\t <div className=\"add\">\n        \t\t{array &&\n          \t\t(\n\t\t\t\t<button\n\t\t\t    type=\"button\"\n\t\t\t    onClick={() => addVal(addValue)}\n\t\t\t    className=\"add-btn\"\n\t\t\t    >\n\t\t\t    <span>Add</span>\n\t\t\t\t</button>\n\t\t  \t\t)}\n      \t\t\t</div>\n\t\t\t\t\n      \t\t\t<div className=\"output\">\n        \t\t<h2>Output</h2>\n\n\t\t\t\t{sorted.map((sorted) =>\n    \t\t\t<span>{sorted}{sorted ? \", \" : \"\"}</span>\n)}\n     \t\t\t </div>\n            </div>\n           \n          </div>\n        }\n      </div>\n\t \n    </form>\n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}